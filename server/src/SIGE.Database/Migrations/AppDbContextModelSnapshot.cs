// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGE.DataAccess.Context;

#nullable disable

namespace SIGE.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.GestorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailContato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Gestores");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.LogEnvioEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Aberto")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CcoEmail")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataAbertura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InnerException")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("RelatorioMedicaoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Response")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UsuarioEnvioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RelatorioMedicaoId");

                    b.HasIndex("UsuarioEnvioId");

                    b.ToTable("LogsEnvioEmails");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.MenuSistemaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Expandido")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Home")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Icone")
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("MenuPredecessorId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MenuPredecessorId");

                    b.ToTable("MenusSistema");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.MenuUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("MenuSistemaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TipoPerfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("MenuSistemaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MenusUsuarios");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.TokenModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("GestorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.UsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("GestorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<bool>("SysAdm")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("GestorId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Externo.CredencialCceeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuthPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuthUsername")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("GestorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GestorId");

                    b.ToTable("CredenciaisCcee");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.DescontoTusdModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly?>("MesReferencia")
                        .HasColumnType("date");

                    b.Property<int>("TipoEnergia")
                        .HasColumnType("int");

                    b.Property<double?>("ValorDescontoTUSD")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("DescontosTusd");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Economia.EnergiaAcumuladaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("MesReferencia")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PontoMedicaoId")
                        .HasColumnType("char(36)");

                    b.Property<double>("ValorMensalAcumulado")
                        .HasColumnType("double");

                    b.Property<double>("ValorTotalAcumulado")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("PontoMedicaoId");

                    b.ToTable("EnergiasAcumuladas");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Economia.RelatorioEconomiaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("MesReferencia")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.Property<string>("ObservacaoValidacao")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PontoMedicaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioResponsavelId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("Validado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("PontoMedicaoId");

                    b.HasIndex("UsuarioResponsavelId");

                    b.ToTable("RelatoriosEconomia");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.FaturaEnergia.FaturaEnergiaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ConcessionariaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<DateOnly>("MesReferencia")
                        .HasColumnType("date");

                    b.Property<Guid>("PontoMedicaoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Segmento")
                        .HasColumnType("int");

                    b.Property<double>("TarifaMedidaReativaForaPonta")
                        .HasColumnType("double");

                    b.Property<double?>("TarifaMedidaReativaPonta")
                        .HasColumnType("double");

                    b.Property<bool>("Validado")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("ValorConsumoMedidoReativoForaPonta")
                        .HasColumnType("double");

                    b.Property<double?>("ValorConsumoMedidoReativoPonta")
                        .HasColumnType("double");

                    b.Property<double>("ValorConsumoTEForaPonta")
                        .HasColumnType("double");

                    b.Property<double?>("ValorConsumoTEPonta")
                        .HasColumnType("double");

                    b.Property<double>("ValorConsumoTUSDForaPonta")
                        .HasColumnType("double");

                    b.Property<double?>("ValorConsumoTUSDPonta")
                        .HasColumnType("double");

                    b.Property<double>("ValorDemandaContratadaForaPonta")
                        .HasColumnType("double");

                    b.Property<double?>("ValorDemandaContratadaPonta")
                        .HasColumnType("double");

                    b.Property<double>("ValorDemandaFaturadaForaPontaConsumida")
                        .HasColumnType("double");

                    b.Property<double>("ValorDemandaFaturadaForaPontaNaoConsumida")
                        .HasColumnType("double");

                    b.Property<double?>("ValorDemandaFaturadaPontaConsumida")
                        .HasColumnType("double");

                    b.Property<double?>("ValorDemandaFaturadaPontaNaoConsumida")
                        .HasColumnType("double");

                    b.Property<double>("ValorDemandaReativaForaPonta")
                        .HasColumnType("double");

                    b.Property<double?>("ValorDemandaReativaPonta")
                        .HasColumnType("double");

                    b.Property<double>("ValorDemandaUltrapassagemForaPonta")
                        .HasColumnType("double");

                    b.Property<double>("ValorDemandaUltrapassagemPonta")
                        .HasColumnType("double");

                    b.Property<double>("ValorDescontoRETUSD")
                        .HasColumnType("double");

                    b.Property<double>("ValorDescontoTUSD")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ConcessionariaId");

                    b.HasIndex("PontoMedicaoId");

                    b.ToTable("FaturasEnergia");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.FaturaEnergia.LancamentoAdicionalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ContabilizaFatura")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("FaturaEnergiaId")
                        .HasColumnType("char(36)");

                    b.Property<int>("NaturezaMercado")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool>("TipoCCEE")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("FaturaEnergiaId");

                    b.ToTable("LancamentosAdicionais");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.FaturamentoCoenelModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PontoMedicaoId")
                        .HasColumnType("char(36)");

                    b.Property<double>("Porcentagem")
                        .HasColumnType("double");

                    b.Property<double>("QtdeSalarios")
                        .HasColumnType("double");

                    b.Property<double>("ValorFixo")
                        .HasColumnType("double");

                    b.Property<DateTime?>("VigenciaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("VigenciaInicial")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PontoMedicaoId");

                    b.ToTable("FaturamentosCoenel");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Medicao.ConsumoMensalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly?>("DataExclusao")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataMedicao")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataRegistro")
                        .HasColumnType("date");

                    b.Property<float>("Icms")
                        .HasColumnType("float");

                    b.Property<DateOnly>("MesReferencia")
                        .HasColumnType("date");

                    b.Property<Guid>("PontoMedicaoId")
                        .HasColumnType("char(36)");

                    b.Property<float>("Proinfa")
                        .HasColumnType("float");

                    b.Property<int>("StatusMedicao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PontoMedicaoId");

                    b.ToTable("ConsumosMensais");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Medicao.MedicoesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("ConsumoAtivo")
                        .HasColumnType("float");

                    b.Property<int>("ConsumoMensalId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DataExclusao")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataRegistro")
                        .HasColumnType("date");

                    b.Property<DateTime>("Periodo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("SubTipo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ConsumoMensalId");

                    b.ToTable("Medicoes");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Medicao.RelatorioMedicaoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Fase")
                        .HasColumnType("int");

                    b.Property<DateTime>("MesReferencia")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.Property<string>("ObservacaoValidacao")
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalMedido")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("UsuarioResponsavelId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("Validado")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("ValorCompraCurtoPrazo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ValorVendaCurtoPrazo")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("UsuarioResponsavelId");

                    b.ToTable("RelatoriosMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.ValorMensalPontoMedicaoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Icms")
                        .HasColumnType("double");

                    b.Property<DateOnly?>("MesReferencia")
                        .HasColumnType("date");

                    b.Property<Guid>("PontoMedicaoId")
                        .HasColumnType("char(36)");

                    b.Property<double>("Proinfa")
                        .HasColumnType("double");

                    b.Property<double>("ValorDescontoRETUSD")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("PontoMedicaoId");

                    b.ToTable("ValoresMensaisPontoMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.BandeiraTarifaria.BandeiraTarifariaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("ValorBandeiraAmarela")
                        .HasColumnType("double");

                    b.Property<double>("ValorBandeiraVerde")
                        .HasColumnType("double");

                    b.Property<double>("ValorBandeiraVermelha1")
                        .HasColumnType("double");

                    b.Property<double>("ValorBandeiraVermelha2")
                        .HasColumnType("double");

                    b.Property<DateTime?>("VigenciaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("VigenciaInicial")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("BandeirasTarifarias");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.BandeiraTarifaria.BandeiraTarifariaVigenteModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Bandeira")
                        .HasColumnType("int");

                    b.Property<Guid>("BandeiraTarifariaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("MesReferencia")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BandeiraTarifariaId");

                    b.ToTable("BandeiraTarifariaVigente");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ConcessionariaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("GestorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GestorId");

                    b.ToTable("Concessionarias");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ImpostoConcessionariaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ConcessionariaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("MesReferencia")
                        .HasColumnType("date");

                    b.Property<double>("ValorCofins")
                        .HasColumnType("double");

                    b.Property<double>("ValorPis")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ConcessionariaId");

                    b.ToTable("ImpostosConcessionarias");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ValorConcessionariaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ConcessionariaId")
                        .HasColumnType("char(36)");

                    b.Property<double>("CusdFPAzul50")
                        .HasColumnType("double");

                    b.Property<double>("CusdPCalcVerde50")
                        .HasColumnType("double");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataUltimoReajuste")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("DemFPAzul")
                        .HasColumnType("double");

                    b.Property<double>("DemPAzul")
                        .HasColumnType("double");

                    b.Property<double>("DemVerde")
                        .HasColumnType("double");

                    b.Property<double>("KWhBT")
                        .HasColumnType("double");

                    b.Property<double>("KWhFPSAzul")
                        .HasColumnType("double");

                    b.Property<double>("KWhFPSVerde")
                        .HasColumnType("double");

                    b.Property<double>("KWhPSAzul")
                        .HasColumnType("double");

                    b.Property<double>("KWhPSVerde")
                        .HasColumnType("double");

                    b.Property<string>("NumeroResolucao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SubGrupo")
                        .HasColumnType("int");

                    b.Property<double>("TusdFPAzul100")
                        .HasColumnType("double");

                    b.Property<double>("TusdFPKWhAzul0")
                        .HasColumnType("double");

                    b.Property<double>("TusdPAzul100")
                        .HasColumnType("double");

                    b.Property<double>("TusdPKWhCalcVerde0")
                        .HasColumnType("double");

                    b.Property<double>("TusdPVerde0")
                        .HasColumnType("double");

                    b.Property<double>("TusdVerde100")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ConcessionariaId");

                    b.ToTable("ValoresConcessionaria");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.ContatoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cargo")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FornecedorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("RecebeEmail")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ContratoEmpresaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("ContratoEmpresas");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ContratoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataBase")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVigenciaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVigenciaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DscGrupo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Segmento")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TakeMaximo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TakeMinimo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("TipoEnergia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ValorAnualContratoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVigenciaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVigenciaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("ValorUnitarioKwh")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("ValoresAnuaisContrato");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ValorMensalContratoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("EnergiaContratada")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("HorasMes")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("MesReferencia")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ValorAnualContratoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ValorAnualContratoId");

                    b.ToTable("ValoresMensaisContrato");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.AgenteMedicaoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CodigoAgente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodigoPerfilAgente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("AgentesMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.EmpresaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Conexao")
                        .HasColumnType("longtext");

                    b.Property<string>("DadosCtaUc")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("EmpresaMatrizId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FonteEnergia")
                        .HasColumnType("longtext");

                    b.Property<Guid>("GestorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResponsavelGestor")
                        .HasColumnType("longtext");

                    b.Property<string>("SubMercado")
                        .HasColumnType("longtext");

                    b.Property<bool>("UnirPontosMedicao")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaMatrizId");

                    b.HasIndex("GestorId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("AcumulacaoLiquida")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("AgenteMedicaoId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ConcessionariaId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Conexao")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IncideICMS")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Segmento")
                        .HasColumnType("int");

                    b.Property<int>("TipoEnergia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgenteMedicaoId");

                    b.HasIndex("ConcessionariaId");

                    b.ToTable("PontosMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.FornecedorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("GestorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TelefoneAlternativo")
                        .HasColumnType("longtext");

                    b.Property<string>("TelefoneContato")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GestorId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.SalarioMinimoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.Property<DateTime?>("VigenciaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("VigenciaInicial")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("SalariosMinimos");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.TarifaAplicacaoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ConcessionariaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataUltimoReajuste")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("KWForaPonta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("KWPonta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("KWhForaPontaTE")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("KWhForaPontaTUSD")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("KWhPontaTE")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("KWhPontaTUSD")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NumeroResolucao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ReatKWhPFTE")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Segmento")
                        .HasColumnType("int");

                    b.Property<int>("SubGrupo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConcessionariaId");

                    b.ToTable("TarifasAplicacao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.LogModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("LogLevel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QueryString")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestPath")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Source")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.LogEnvioEmail", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Geral.Medicao.RelatorioMedicaoModel", "RelatorioMedicao")
                        .WithMany()
                        .HasForeignKey("RelatorioMedicaoId");

                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.UsuarioModel", "UsuarioEnvio")
                        .WithMany()
                        .HasForeignKey("UsuarioEnvioId");

                    b.Navigation("RelatorioMedicao");

                    b.Navigation("UsuarioEnvio");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.MenuSistemaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.MenuSistemaModel", "MenuPredecessor")
                        .WithMany()
                        .HasForeignKey("MenuPredecessorId");

                    b.Navigation("MenuPredecessor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.MenuUsuarioModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.MenuSistemaModel", "MenuSistema")
                        .WithMany()
                        .HasForeignKey("MenuSistemaId");

                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.UsuarioModel", "Usuario")
                        .WithMany("MenusUsuario")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuSistema");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.UsuarioModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.GestorModel", "Gestor")
                        .WithMany()
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Externo.CredencialCceeModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.GestorModel", "Gestor")
                        .WithMany()
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.DescontoTusdModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.FornecedorModel", "Fornecedor")
                        .WithMany("DescontosTusd")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Economia.EnergiaAcumuladaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", "PontoMedicao")
                        .WithMany()
                        .HasForeignKey("PontoMedicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Economia.RelatorioEconomiaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", "PontoMedicao")
                        .WithMany()
                        .HasForeignKey("PontoMedicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.UsuarioModel", "UsuarioResponsavel")
                        .WithMany()
                        .HasForeignKey("UsuarioResponsavelId");

                    b.Navigation("PontoMedicao");

                    b.Navigation("UsuarioResponsavel");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.FaturaEnergia.FaturaEnergiaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ConcessionariaModel", "Concessionaria")
                        .WithMany()
                        .HasForeignKey("ConcessionariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", "PontoMedicao")
                        .WithMany()
                        .HasForeignKey("PontoMedicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concessionaria");

                    b.Navigation("PontoMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.FaturaEnergia.LancamentoAdicionalModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Geral.FaturaEnergia.FaturaEnergiaModel", "FaturaEnergia")
                        .WithMany("LancamentosAdicionais")
                        .HasForeignKey("FaturaEnergiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FaturaEnergia");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.FaturamentoCoenelModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", "PontoMedicao")
                        .WithMany()
                        .HasForeignKey("PontoMedicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Medicao.ConsumoMensalModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", "PontoMedicao")
                        .WithMany("ConsumosMensal")
                        .HasForeignKey("PontoMedicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Medicao.MedicoesModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Geral.Medicao.ConsumoMensalModel", "ConsumoMensal")
                        .WithMany("Medicoes")
                        .HasForeignKey("ConsumoMensalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsumoMensal");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Medicao.RelatorioMedicaoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Contrato.ContratoModel", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.UsuarioModel", "UsuarioResponsavel")
                        .WithMany()
                        .HasForeignKey("UsuarioResponsavelId");

                    b.Navigation("Contrato");

                    b.Navigation("UsuarioResponsavel");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.ValorMensalPontoMedicaoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", "PontoMedicao")
                        .WithMany("ValoresMensaisPontoMedicao")
                        .HasForeignKey("PontoMedicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.BandeiraTarifaria.BandeiraTarifariaVigenteModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.BandeiraTarifaria.BandeiraTarifariaModel", "BandeiraTarifaria")
                        .WithMany("BandeirasTarifariasVigente")
                        .HasForeignKey("BandeiraTarifariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandeiraTarifaria");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ConcessionariaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.GestorModel", "Gestor")
                        .WithMany()
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ImpostoConcessionariaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ConcessionariaModel", "Concessionaria")
                        .WithMany("ImpostosConcessinaria")
                        .HasForeignKey("ConcessionariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concessionaria");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ValorConcessionariaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ConcessionariaModel", "Concessionaria")
                        .WithMany("ValoresConcessionaria")
                        .HasForeignKey("ConcessionariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concessionaria");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.ContatoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.EmpresaModel", "Empresa")
                        .WithMany("Contatos")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.FornecedorModel", "Fornecedor")
                        .WithMany("Contatos")
                        .HasForeignKey("FornecedorId");

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ContratoEmpresaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Contrato.ContratoModel", "Contrato")
                        .WithMany("ContratoEmpresas")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.EmpresaModel", "Empresa")
                        .WithMany("ContratosEmpresa")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ContratoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.FornecedorModel", "Fornecedor")
                        .WithMany("Contratos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ValorAnualContratoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Contrato.ContratoModel", "Contrato")
                        .WithMany("ValoresAnuaisContrato")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ValorMensalContratoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Contrato.ValorAnualContratoModel", "ValorAnualContrato")
                        .WithMany("ValoresMensaisContrato")
                        .HasForeignKey("ValorAnualContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ValorAnualContrato");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.AgenteMedicaoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.EmpresaModel", "Empresa")
                        .WithMany("AgentesMedicao")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.EmpresaModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.EmpresaModel", "EmpresaMatriz")
                        .WithMany()
                        .HasForeignKey("EmpresaMatrizId");

                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.GestorModel", "Gestor")
                        .WithMany()
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaMatriz");

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Empresa.AgenteMedicaoModel", "AgenteMedicao")
                        .WithMany("PontosMedicao")
                        .HasForeignKey("AgenteMedicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ConcessionariaModel", "Concessionaria")
                        .WithMany("PontosMedicao")
                        .HasForeignKey("ConcessionariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteMedicao");

                    b.Navigation("Concessionaria");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.FornecedorModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Administrativo.GestorModel", "Gestor")
                        .WithMany()
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.TarifaAplicacaoModel", b =>
                {
                    b.HasOne("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ConcessionariaModel", "Concessionaria")
                        .WithMany()
                        .HasForeignKey("ConcessionariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concessionaria");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Administrativo.UsuarioModel", b =>
                {
                    b.Navigation("MenusUsuario");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.FaturaEnergia.FaturaEnergiaModel", b =>
                {
                    b.Navigation("LancamentosAdicionais");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Geral.Medicao.ConsumoMensalModel", b =>
                {
                    b.Navigation("Medicoes");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.BandeiraTarifaria.BandeiraTarifariaModel", b =>
                {
                    b.Navigation("BandeirasTarifariasVigente");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Concessionaria.ConcessionariaModel", b =>
                {
                    b.Navigation("ImpostosConcessinaria");

                    b.Navigation("PontosMedicao");

                    b.Navigation("ValoresConcessionaria");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ContratoModel", b =>
                {
                    b.Navigation("ContratoEmpresas");

                    b.Navigation("ValoresAnuaisContrato");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Contrato.ValorAnualContratoModel", b =>
                {
                    b.Navigation("ValoresMensaisContrato");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.AgenteMedicaoModel", b =>
                {
                    b.Navigation("PontosMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.EmpresaModel", b =>
                {
                    b.Navigation("AgentesMedicao");

                    b.Navigation("Contatos");

                    b.Navigation("ContratosEmpresa");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.Empresa.PontoMedicaoModel", b =>
                {
                    b.Navigation("ConsumosMensal");

                    b.Navigation("ValoresMensaisPontoMedicao");
                });

            modelBuilder.Entity("SIGE.Core.Models.Sistema.Gerencial.FornecedorModel", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Contratos");

                    b.Navigation("DescontosTusd");
                });
#pragma warning restore 612, 618
        }
    }
}
